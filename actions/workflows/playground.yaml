version: "2.0" # mistral version
name: umccr.playground
description: Playground workflow

workflows:
  main:
    type: direct
    input:
      - runfolder
      - runfolder_name
      - runfolder_host
      - bcl2fastq_host
      - bcl2fastq_port
      - bcl2fastq_outdir
      - rsync_user
      - rsync_dest_host
      - rsync_dest_path
    output:
      output_the_whole_workflow_context: <% $ %>

    tasks:
      # Notify of newly detected runfolder
      post_runfolder:
        action: chatops.post_message
        input:
          channel: "#arteria-dev"
          message: "New runfolder ready: <% $.runfolder %>. Starting conversion..."
        on-success:
          - bcl2fastq_conversion
          

      # Start the bcl2fastq conversion and notify of start
      bcl2fastq_conversion:
        action: core.http
        input:
          url: 'http://<% $.bcl2fastq_host %>:<% $.bcl2fastq_port %>/api/1.0/start/<% $.runfolder_name %>'
          body: '{}'
          method: "POST"
        publish:
          bcl2fastq_job: <% task(bcl2fastq_conversion).result.body.job_id %>
        on-success:
          - bcl2fastq_status
          - post_bcl2fastq_start

      post_bcl2fastq_start:
        action: chatops.post_message
        input:
          channel: "#arteria-dev"
          message: "Runfolder <% $.runfolder %> converting (job: <% $.bcl2fastq_job %>)."


      # Monitor the conversion status and notify of status
      bcl2fastq_status:
        action: core.http
        wait-after: 300 # check for status updates every 5min
        input:
          url: 'http://<% $.bcl2fastq_host %>:<% $.bcl2fastq_port %>/api/1.0/status/<% $.bcl2fastq_job %>'
          method: "GET"
        publish:
          bcl2fastq_status: <% task(bcl2fastq_status).result.body.state %>
        on-success:
          - bcl2fastq_status: "<% $.bcl2fastq_status = 'pending' %>"
          - bcl2fastq_status: "<% $.bcl2fastq_status = 'started' %>"
          - rsync_to_destination: "<% $.bcl2fastq_status = 'done' %>"
          - post_bcl2fastq_success: "<% $.bcl2fastq_status = 'done' %>"
          - post_bcl2fastq_error: "<% $.bcl2fastq_status = 'error' %>"

      post_bcl2fastq_success:
        action: chatops.post_message
        input:
          channel: "#arteria-dev"
          message: "Runfolder <% $.runfolder %> (job: <% $.bcl2fastq_job %>) successfully converted."

      post_bcl2fastq_error:
        action: chatops.post_message
        input:
          channel: "#arteria-dev"
          message: "Runfolder <% $.runfolder %> (job: <% $.bcl2fastq_job %>) errored."


      # sync the data to the HPC
      rsync_to_destination:
        action: core.remote
        input:
          cmd: 'rsync -avzh <% $.bcl2fastq_outdir %>/<% $.runfolder_name %> -e "ssh" <% $.rsync_user %>@<% $.rsync_dest_host %>:<% $.rsync_dest_path %>'
          hosts: <% $.runfolder_host %>
          port: 2222
          username: "limsadmin"
          private_key: "/home/stanley/.ssh/stanley_rsa"
          timeout: 43200
        retry: # retry the command 3 times with 10sec delay in case of error, then fail
          count: 3
          delay: 10
        on-success:
          - post_rsync_success
        on-error:
          - post_rsync_failure

      post_rsync_success:
        action: chatops.post_message
        input:
          channel: "#arteria-dev"
          message: "Runfolder <% $.runfolder %> successfuly synced to <% $.rsync_dest_host %>"

      post_rsync_failure:
        action: chatops.post_message
        input:
          channel: "#arteria-dev"
          message: "Runfolder <% $.runfolder %> sync failed!"
