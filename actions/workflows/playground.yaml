version: "2.0" # mistral version
name: umccr.playground
description: Playground workflow

workflows:
  main:
    type: direct
    input:
      - runfolder
      - runfolder_host
      - rsync_user
      - rsync_dest_host
      - rsync_dest_path
    output:
      output_the_whole_workflow_context: <% $ %>

    tasks:
      print_runfolder:
        action: core.local
        input:
          cmd: 'echo "Runfolder <% $.runfolder %> ready. Starting workflow..."'
        on-success:
          - post_runfolder
          - rsync_to_destination

      post_runfolder:
        action: chatops.post_message
        input:
          channel: "#arteria"
          message: "New runfolder ready: <% $.runfolder %>"

      rsync_to_destination:
        action: core.remote
        input:
          cmd: 'rsync -avzh <% $.runfolder %> -e "ssh" <% $.rsync_user %>@<% $.rsync_dest_host %>:<% $.rsync_dest_path %>'
          hosts: <% $.runfolder_host %>
          port: 2222
          username: "limsadmin"
          private_key: "/home/stanley/.ssh/stanley_rsa"
          timeout: 43200
        retry:
          count: 3
          delay: 10
        on-success:
          - post_rsync_success
        on-error:
          - post_rsync_failure

      post_rsync_success:
        action: chatops.post_message
        input:
          channel: "#arteria"
          message: "Runfolder <% $.runfolder %> successfuly synced to <% $.rsync_dest_host %>"

      post_rsync_failure:
        action: chatops.post_message
        input:
          channel: "#arteria"
          message: "Runfolder <% $.runfolder %> sync failed!"

      # create and store file checksums?

      # start rsync to HPC
      # use retry option to gard against network drops
      # report/log retry count (to keep stats on reliability/stability of rsync)
      # report if rsync was not successfull/complete

      # report successfully cmopleted sync

      # kick off bcl2fastq conversion on HPC

      # report conversion start (ideally with status link)

      # This is the end of this workflow, further actions should be kicked of by
      # evnets pushed into st2 or generated by a st2 sensor to allow async work.
      # Possibly reduce this workflow to end after rsync start and trigger new
      # workflow(s) to check rsync result and to kick off bcl2fastq conversion.
